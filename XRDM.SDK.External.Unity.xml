<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XRDM.SDK.External.Unity</name>
    </assembly>
    <members>
        <member name="T:XRDM.SDK.External.Unity.UserExperience">
            <summary>
            Used to track user experiences. All fields should be JSON
            representations according to the target system's specification.
            </summary>
        </member>
        <member name="T:XRDM.SDK.External.Unity.ISdkService">
            <summary>Provides access to SDK functions.</summary>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetDeviceId">
            <summary>Gets the UUID assigned to device by ArborXR.</summary>
            <returns>UUID is provided as a string.</returns>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetDeviceSerial">
            <summary>Gets the serial number assigned to device by OEM.</summary>
            <returns>Serial number is provided as a string.</returns>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetDeviceTitle">
            <summary>Gets the title given to device by admin through the ArborXR Web Portal.</summary>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetDeviceTags">
            <summary>Gets the tags added to device by admin through the ArborXR Web Portal.</summary>
            <returns>
              Tags are represented as a string array. Array will be empty if no tags are assigned to device.
            </returns>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetOrgId">
            <summary>
              Gets the UUID of the organization where the device is assigned. Organizations are created in the
              ArborXR Web Portal.
            </summary>
            <returns>UUID is provided as a string.</returns>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetOrgTitle">
            <summary>Gets the name assigned to organization by admin through the ArborXR Web Portal.</summary>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetOrgSlug">
            <summary>Gets the identifier generated by ArborXR when admin assigns title to organization.</summary>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetMacAddressFixed">
            <summary>Gets the physical MAC address assigned to device by OEM.</summary>
            <returns>MAC address is provided as a string.</returns>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetMacAddressRandom">
            <summary>Gets the randomized MAC address for the current WiFi connection.</summary>
            <returns>MAC address is provided as a string.</returns>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetIsAuthenticated">
            <summary>Gets whether the device is SSO authenticated.</summary>
            <returns>Whether the device is SSO authenticated.</returns>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetAccessToken">
            <summary>Gets SSO access token.</summary>
            <returns>SSO access token.</returns>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetRefreshToken">
            <summary>Gets SSO refresh token.</summary>
            <returns>SSO refresh token.</returns>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetExpiresDateUtc">
            <summary>Gets SSO token remaining lifetime.</summary>
            <returns>The remaining lifetime of the access token in seconds.</returns>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.TrackUserExperience(XRDM.SDK.External.Unity.UserExperience)">
            <summary>Track a user experience.</summary>
            <para>
            All fields of <see cref="T:XRDM.SDK.External.Unity.UserExperience"/> should be JSON
            representations according to the target system's specification.
            </para>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetIsInitialized">
            <summary>Gets whether the XRDM client is initialized.</summary>
            <returns>Whether the XRDM client is initialized.</returns>
        </member>
        <member name="M:XRDM.SDK.External.Unity.ISdkService.GetFingerprint">
            <returns>The device fingerprint.</returns>
        </member>
        <member name="T:XRDM.SDK.External.Unity.SdkBehaviour">
            <summary>Allows interacting with the SDK service.</summary>
            <remarks>
              Only a single instance of this class should be used per app. The SDK is automatically initialized and shut
              down whenever the instance of this class is enabled/disabled (respectively).
            </remarks>
        </member>
        <member name="T:ThisAssembly">
            <summary>Provides access to the current assembly information.</summary>
        </member>
        <member name="T:ThisAssembly.Git">
            <summary>Provides access to the git information for the current assembly.</summary>
        </member>
        <member name="F:ThisAssembly.Git.IsDirty">
            <summary>IsDirty: false</summary>
        </member>
        <member name="F:ThisAssembly.Git.IsDirtyString">
            <summary>IsDirtyString: false</summary>
        </member>
        <member name="F:ThisAssembly.Git.RepositoryUrl">
            <summary>Repository URL: https://gitlab.com/arborxr/device.git</summary>
        </member>
        <member name="F:ThisAssembly.Git.Branch">
            <summary>Branch: main</summary>
        </member>
        <member name="F:ThisAssembly.Git.Commit">
            <summary>Commit: dd29fda43</summary>
        </member>
        <member name="F:ThisAssembly.Git.Sha">
            <summary>Sha: dd29fda43a5cbb9c6a28c895282e0d644a98e69a</summary>
        </member>
        <member name="F:ThisAssembly.Git.CommitDate">
            <summary>Commit date: 2024-08-28T09:54:40+00:00</summary>
        </member>
        <member name="F:ThisAssembly.Git.Commits">
            <summary>Commits on top of base version: 0</summary>
        </member>
        <member name="F:ThisAssembly.Git.Tag">
            <summary>Tag: </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseTag">
            <summary>Base tag: </summary>
        </member>
        <member name="T:ThisAssembly.Git.BaseVersion">
            <summary>Provides access to the base version information used to determine the <see cref="T:ThisAssembly.Git.SemVer" />.</summary>      
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Major">
            <summary>Major: 2024</summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Minor">
            <summary>Minor: 35</summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Patch">
            <summary>Patch: 0</summary>
        </member>
        <member name="T:ThisAssembly.Git.SemVer">
            <summary>Provides access to SemVer information for the current assembly.</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Major">
            <summary>Major: 2024</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Minor">
            <summary>Minor: 35</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Patch">
            <summary>Patch: 0</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Label">
            <summary>Label: </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.DashLabel">
            <summary>Label with dash prefix: </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Source">
            <summary>Source: File</summary>
        </member>
    </members>
</doc>
